{"posts":[{"id":"65d38e155e86a200010301b8","slug":"csharp-delegates","title":"Delegates 委派","updated_at":"2024-02-20T01:23:25.000+08:00","visibility":"public","url":"https://vincent87720.github.io/csharp-delegates/","excerpt":"我們可以把委派想像成是一個沒有內容的函式，可以被用來當作是某個函式的臨時替身，當我們決定好要用哪個函式時再將真正的函式變成委派實體，並呼叫委派實體以執行該函式。"},{"id":"65d0dfbd2d9f94000158a994","slug":"sql-having-clause","title":"HAVING語句","updated_at":"2024-02-18T00:40:28.000+08:00","visibility":"public","url":"https://vincent87720.github.io/sql-having-clause/","excerpt":"HAVING語句用來篩選聚合函數執行後的結果"},{"id":"65a4caf76883f700018af452","slug":"csharp-virtual","title":"Virtual","updated_at":"2024-01-16T00:59:11.000+08:00","visibility":"public","url":"https://vincent87720.github.io/csharp-virtual/","excerpt":"設定Virtual關鍵字後，允許衍生類別（Derived Class）覆寫（override）其狀態或行為。"},{"id":"658da897fad3ab0001b2c85c","slug":"muroran-exchange-program-application","title":"交換學生申請紀錄","updated_at":"2023-12-29T01:36:10.000+08:00","visibility":"public","url":"https://vincent87720.github.io/muroran-exchange-program-application/","excerpt":"申請交換前須先確認室蘭的行事曆(学年暦)，通常是4月1日或10月1日開始，接著需決定要去多久，以便填寫以下表單"},{"id":"654673fcb534770001efa757","slug":"csharp-validation-attribute-of-guid","title":"驗證 C# 中的 Guid 屬性","updated_at":"2023-11-05T00:46:29.000+08:00","visibility":"public","url":"https://vincent87720.github.io/csharp-validation-attribute-of-guid/","excerpt":"在使用[Required]這個標籤進行 Guid 型態屬性的驗證時，原本預期沒有填入該欄位時會被檔下來，但用在 Guid 型態的屬性上居然沒效。本篇紀錄如何以「自訂驗證標籤」及「更改欄位型態」兩個方法來解決這個問題。"},{"id":"64ea48dd4feca3000178b923","slug":"validation-attributes-in-asp-net-core","title":"Validation attributes in ASP.NET Core","updated_at":"2023-11-05T00:44:11.000+08:00","visibility":"public","url":"https://vincent87720.github.io/validation-attributes-in-asp-net-core/","excerpt":"ASP.NET Core 裡的 Validation attributes 用於設定欄位的規則，當收到 HTTP 請求時依照規則檢查請求的資料是否符合 Validation attributes 設定的規則，以此過濾掉不符合規則的請求。"},{"id":"654285210b04b200017b53f7","slug":"upload-file-using-csharp","title":"使用 C# 建立上傳檔案請求","updated_at":"2023-11-02T01:14:07.000+08:00","visibility":"public","url":"https://vincent87720.github.io/upload-file-using-csharp/","excerpt":"環境\n\n\n * macOS Sonoma 14.0(Apple M1 Pro)\n * .NET 6.0\n * Visual Studio Community 2022 for Mac 17.6.6\n\n\n\n讀取檔案、建立請求及傳送請求\n\n\nvar filename = \"test.png\";\n\n// 建立 HttpClient 實體\nusing (var client = new HttpClient())\n{\n    // 建立 FileStream\n    using (Stream stream = new FileStream(filename, FileMode.Open, FileAccess.Read,\n            FileShare.ReadWrite, 4096, FileOptions.SequentialScan))\n    {\n        // 建立 multipart/form-data 類型的 HttpContent\n        using (var content = new MultipartFormDataContent())\n   "},{"id":"6534cec4bee2720001e0bdd5","slug":"race-condition-intro","title":"Race condition 的種類、成因與解決辦法","updated_at":"2023-10-22T15:56:57.000+08:00","visibility":"public","url":"https://vincent87720.github.io/race-condition-intro/","excerpt":"當多個程序同時存取同一個資源時，很可能會發生該資源在其他程序進行期間被進行更動，導致資料與預期的結果不同的問題。"},{"id":"635a816a57207246b927a8ba","slug":"pattern-rest-api-design","title":"[Pattern]REST API 設計規範","updated_at":"2023-10-02T00:59:37.000+08:00","visibility":"public","url":"https://vincent87720.github.io/pattern-rest-api-design/","excerpt":"REST是一種架構風格，類似設計模式，使用一些原則規範應用程式的設計"},{"id":"635a816a57207246b927a8bd","slug":"module-not-found-error-in-django-pyinstaller","title":"[Python]使用Pyinstaller打包Django專案發生ModuleNotFoundError: No module named 'XXX'.錯誤","updated_at":"2023-10-02T00:30:55.000+08:00","visibility":"public","url":"https://vincent87720.github.io/module-not-found-error-in-django-pyinstaller/","excerpt":"使用pyinstaller將manage.py打包後會產生manage.exe可執行檔，在執行`manage.exe runserver --noreload`指令時發生*ModuleNotFoundError: No module named 'XXX'.* 錯誤"},{"id":"651996620bc50e000198cfe7","slug":"queued-background-tasks-in-asp-net-core","title":"Queued background tasks in ASP.NET Core","updated_at":"2023-10-02T00:05:06.000+08:00","visibility":"public","url":"https://vincent87720.github.io/queued-background-tasks-in-asp-net-core/","excerpt":"在實務上有時候會遇到某些需要花費大量時間執行的任務，像我就是在寫公司專案時遇到需要產生縮圖和轉檔的需求，若不想讓使用者一直轉圈圈等待的話，我們必須採用一些方法讓我們可以先回覆使用者，之後再來慢慢處理這些需求，在背景中讓這些任務排隊執行就是其中一個方法。"},{"id":"65105b6630e7a60001e1d564","slug":"difference-between-ienumerable-iqueryable-linq","title":"IEnumerable或IQueryable物件在進行LINQ查詢時的差異","updated_at":"2023-09-25T00:01:52.000+08:00","visibility":"public","url":"https://vincent87720.github.io/difference-between-ienumerable-iqueryable-linq/","excerpt":"當使用LINQ查詢時，執行對象是IEnumerable或是IQueryable有很大的差異。"},{"id":"64fc94aefc699500018c4164","slug":"build-media-streaming-in-asp-net-core-using-hls","title":"使用ASP.NET Core Web API提供HLS影片串流服務","updated_at":"2023-09-10T00:08:45.000+08:00","visibility":"public","url":"https://vincent87720.github.io/build-media-streaming-in-asp-net-core-using-hls/","excerpt":"公司的APP其中一個功能是影片上傳及串流的服務，這陣子比較了許多影片串流及直播的通訊協定，最後選擇使用HLS協定來提供影片串流服務，流程包括「建立影片上傳API」、「影片轉檔」及「建立串流API」，這篇筆記記錄如何使用ASP.NET Core Web API來建立影音串流服務。"},{"id":"64ed875555ef9900013f35f7","slug":"promise-in-javascript","title":"Promise in JavaScript","updated_at":"2023-08-29T13:55:58.000+08:00","visibility":"public","url":"https://vincent87720.github.io/promise-in-javascript/","excerpt":"Promise是Javascript提供的建構函式，用於建構Promise物件，該物件會存放非同步事件的結果。"},{"id":"64d27827aaa179000118761d","slug":"exception-handling-with-middleware-in-aspnet-core","title":"ASP.NET Core使用Middleware進行例外處理","updated_at":"2023-08-25T02:48:53.000+08:00","visibility":"public","url":"https://vincent87720.github.io/exception-handling-with-middleware-in-aspnet-core/","excerpt":"當API被呼叫且發生例外時，不太會希望預設的錯誤訊息被傳回給使用者，在C#中可以使用try catch攔截錯誤訊息。\n\n但在每個可能會發生錯誤的地方都加上try catch相當繁瑣，使用Middleware可以捕捉錯誤訊息，並在返回給使用者之前統一處理，不僅可以節省開發時間，還能將錯誤訊息攔截，避免洩漏過多內部訊息給使用者，提高安全性。"},{"id":"64db19c5e17ae60001fb73af","slug":"aspnet-core-render-section","title":"ASP.NET中RenderSection的作用","updated_at":"2023-08-25T02:48:30.000+08:00","visibility":"public","url":"https://vincent87720.github.io/aspnet-core-render-section/","excerpt":"專案中的各個Page會被插入到_Layout.cshtml裡@RenderBody()的位置，與主版面整合。若Page中的某段程式不想被放在body內時，可以使用Section及RenderSection改變程式碼在_Layout.cshtml中的插入位置。"},{"id":"64e7a2daf1c6660001711fd6","slug":"model-binding-in-asp-net-core","title":"Model Binding in ASP.NET Core","updated_at":"2023-08-25T02:48:01.000+08:00","visibility":"public","url":"https://vincent87720.github.io/model-binding-in-asp-net-core/","excerpt":"Controller會處理來自用戶端的HTTP Request，請求中會有一些資訊來往，這些資料會需要經過型別轉換、檢查必填、最大長度及正確性等步驟後我們才能使用，若手動處理這些步驟將會非常繁瑣。\nASP.NET提供Model Binding的功能，可以處理來自使用者請求中的資料，將其綁定到指定型態的資料上，省去繁複的處理程序並提高正確性。"},{"id":"64de4be0f1c6660001711fc3","slug":"http-header-content-disposition","title":"HTTP header Content-Disposition","updated_at":"2023-08-18T00:37:55.000+08:00","visibility":"public","url":"https://vincent87720.github.io/http-header-content-disposition/","excerpt":"Content-Disposition包含兩種類型，分別是inline 和 attachment，用於指定下載的行為"},{"id":"64dbb5f35f1c820001e0a416","slug":"aspnet-core-dependency-injection","title":"依賴注入 Dependency injection","updated_at":"2023-08-16T21:58:43.000+08:00","visibility":"public","url":"https://vincent87720.github.io/aspnet-core-dependency-injection/","excerpt":"在高階模組中直接針對低階模組進行實作會產生高耦合，高度依賴低階模組，當想抽換低階模組、低階模組常常變動或是低階模組的設計改變時，會影響到高階模組。應統一由控制反轉中心建立物件，將物件送到高階模組內進行使用"},{"id":"64da6975e17ae60001fb739e","slug":"clustered-and-nonclustered-indexes","title":"叢集索引與非叢集索引","updated_at":"2023-08-15T01:53:35.000+08:00","visibility":"public","url":"https://vincent87720.github.io/clustered-and-nonclustered-indexes/","excerpt":"通常資料庫在尋找資料是逐行檢查，看看每一筆資料是否符合條件，若符合則拿出，不符合就往下一筆直到結束，稱為Full table scan。\n\n隨著資料量越來越大，查找的時間也會跟著變慢，使用Index可以加快查詢速度。"},{"id":"64d5f976e17ae60001fb7389","slug":"webpack-multiple-entry-and-output","title":"Webpack設定多個entry及output","updated_at":"2023-08-11T17:07:59.000+08:00","visibility":"public","url":"https://vincent87720.github.io/webpack-multiple-entry-and-output/","excerpt":"預設的Webpack使用單一entry及output，若需要多個entry及output可以在webpack.config.js中加入一個函式取得目錄內的所有檔案，將所有檔案加入至entry中。"},{"id":"64d5f2755c5ac00001391bc4","slug":"vue3-webpack-import-vue-esm-bundler","title":"Vue3錯誤訊息 Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".","updated_at":"2023-08-11T16:36:07.000+08:00","visibility":"public","url":"https://vincent87720.github.io/vue3-webpack-import-vue-esm-bundler/","excerpt":"從原本用CDN載入Vue，轉換為用npm載入並用webpack打包的過程中發生了錯誤，原因與Vue的使用環境有關。"},{"id":"635a816a57207246b927a8b0","slug":"csharp-connect-to-postgresql","title":"[C#]使用Npgsql連接到PostgreSQL server","updated_at":"2023-08-09T01:37:34.000+08:00","visibility":"public","url":"https://vincent87720.github.io/csharp-connect-to-postgresql/","excerpt":"環境\n\n\n * Windows 10 x64\n * Visual Studio Community 2019 v16.2.2\n * Npgsql v4.1.4\n\n\n\n安裝\n\n\n開啟visual studio後點選\"工具->NuGet套件管理員->管理方案的NuGet套件\"\n\n\n\n點選Npgsql，勾選右方會執行到此套件的專案，再點選安裝\n\n\n\n按確定進行安裝\n\n\n\n\n\n建立連線\n\n\n設定好host post username password database等連線資訊後，使用NpgsqlConnection建立一個新連線，再使用Open()方法開啟連線\n\n\nclass Program\n{\n    \n    static void Main(string[] args)\n    {\n        string host = \"localhost\";\n        string port = \"5432\";\n        string username = \"postgres\";\n        string password = \"password\";\n        strin"},{"id":"64d1177d1f95c4000167e858","slug":"difference-between-assign-and-replace-in-javascript","title":"比較JavaScript中assign與replace的差異","updated_at":"2023-08-08T00:25:04.000+08:00","visibility":"public","url":"https://vincent87720.github.io/difference-between-assign-and-replace-in-javascript/","excerpt":"assign\n\n\n\n功能\n\n\nassign可以讓window載入並顯示URL指定的文件\n\n\n\n語法\n\n\nwindow.location.assign(\"http://test.com\");\n\n\n\n\n與assign相同功用的用法\n\n\nwindow.location=\"http://test.com\"\nwindow.location.href=\"http://test.com\"\nlocation=\"http://test.com\"\nlocation.href=\"http://test.com\"\n\n\n\n\n使用時機\n\n\n * 希望在跳轉頁面後可以返回上一頁\n\n\n\nreplace\n\n\n\n功能\n\n\nreplace會使用URL指定的文件置換掉目前的頁面\n\n\n\n語法\n\n\nwindow.location.replace(\"http://test.com\");\n\n\n\n\n使用時機\n\n\n * 希望頁面重新載入而不是重新提交一次\n * 不應該重複觸發的頁面，例如：\n   \n   * 金流付錢頁面，付款後replace回原本的頁面，減少使用者返回上一頁造成錯誤的機會\n   \n\n\n\n差異\n\n\nreplace和ass"},{"id":"63e5196c0a96e94f12972009","slug":"docker-buildx","title":"Docker buildx","updated_at":"2023-02-10T00:09:53.000+08:00","visibility":"public","url":"https://vincent87720.github.io/docker-buildx/","excerpt":"Synology的NAS可以安裝docker套件，下載映像檔使用。使用官方的映像檔可以正常執行，但使用自己製作的映像檔卻跳出了錯誤訊息standard_init_linux.go:230: exec user process caused: exec format error，搜尋過後發現與編譯平台有關，使用buildx將映像檔編譯為目標平台可以使用的映像檔便可以有效解決這個問題。"},{"id":"635cfeb06c901d4844747e97","slug":"quasar-scroll-to-field-on-validation-error","title":"使用QUASAR在表單送出時滾動到錯誤欄位","updated_at":"2022-10-29T18:42:51.000+08:00","visibility":"public","url":"https://vincent87720.github.io/quasar-scroll-to-field-on-validation-error/","excerpt":"表單submit時會希望能讓頁面自動滾動到元素位置，使用q-form的validation-error事件搭配滾動來達成此效果"},{"id":"635cfda26c901d4844747e89","slug":"python-get-binary-path","title":"Python取得打包成binary後的路徑","updated_at":"2022-10-29T18:18:38.000+08:00","visibility":"public","url":"https://vincent87720.github.io/python-get-binary-path/","excerpt":"使用pyinstaller打包後的執行檔在執行時有可能會發生實際執行的檔案位於Temporary內的情況，這時就必須用以下方法取得實際exe檔案所在的路徑"},{"id":"635cfc2d6c901d4844747e7d","slug":"pipe","title":"Pipe","updated_at":"2022-10-29T18:15:36.000+08:00","visibility":"public","url":"https://vincent87720.github.io/pipe/","excerpt":"pipe()用於在兩個有關係的process（通常是父子或是兄弟process）之間通信\n假設有A和B兩個process，pipe()建立之後可以用A讀或寫經由pipe傳送到B的寫或讀"},{"id":"635cfb2e6c901d4844747e6e","slug":"interprocess-communication","title":"Interprocess Communication (IPC)","updated_at":"2022-10-29T18:09:26.000+08:00","visibility":"public","url":"https://vincent87720.github.io/interprocess-communication/","excerpt":"行程間通訊有兩種方式，分別是Shared Memory Method和Message passing"},{"id":"635cf8c16c901d4844747e61","slug":"memory-management","title":"Memory management","updated_at":"2022-10-29T18:05:33.000+08:00","visibility":"public","url":"https://vincent87720.github.io/memory-management/","excerpt":"Stack\n\n\n * 在往stack儲存資料時不需查找，僅需儲存在最上面的區塊即可，非常快速\n * 任何要存在stack的資料必須有限且靜態（資料大小必須在編譯時就知道）\n * 函式的執行資料儲存在stack frames（actual execution stack），每個函式會有自己的frame區塊，當函式內宣告新變數時會將資料推到最上面的區塊。當每個函式結束時，會清除最上面的區塊，所有被推送到該區塊的變數將被清除。\n * 每個thread可以有自己的一個stack\n * 儲存在stack上的資料由OS操作，非常簡單明瞭\n * 儲存在stack上的資料為區域變數（資料型態、primitives或primitive constants）、指標及function frames\n * 當stack的size太大時會遇到stack overflow errors\n * 大多數的語言對於可以儲存在stack的資料是有限制的\n\n\n\nHeap\n\n\n * 與stack不一樣，Heap需要使用指標尋找資料\n * 比起stack，尋找資料的速度稍慢，但可以存放更大量的資料\n * 動態大小的資料可以存放"},{"id":"635cf62e6c901d4844747e4b","slug":"elasticsearch-intro","title":"ElasticSearch簡介","updated_at":"2022-10-29T17:54:55.000+08:00","visibility":"public","url":"https://vincent87720.github.io/elasticsearch-intro/","excerpt":"ElasticSearch是一個開源的且基於Lucene的全文搜尋引擎，其封裝Lucene並提供REST API，讓使用者可以更容易操作及使用。"},{"id":"635cf0c86c901d4844747e39","slug":"postgresql-write-timestamp-on-update","title":"[PostgreSQL]執行UPDATE時自動記錄更新時間","updated_at":"2022-10-29T17:35:41.000+08:00","visibility":"public","url":"https://vincent87720.github.io/postgresql-write-timestamp-on-update/","excerpt":"若需要用到「依照更新順序排列資料」功能時，則會需要在表格被變動時在某個欄位紀錄該筆資料的變更時間以進行排序，這篇筆記在table中新增update_at欄位並使用TRIGGER及FUNCTION對其進行更新，以達成在更新紀錄時自動記錄更新時間的功能"},{"id":"635a816a57207246b927a8bc","slug":"python-pyinstaller-django-runserver-does-not-exist-error","title":"[Python]使用Pyinstaller打包Django專案發生\"RuntimeError: Script runserver does not exist.\"錯誤","updated_at":"2021-11-24T23:35:58.000+08:00","visibility":"public","url":"https://vincent87720.github.io/python-pyinstaller-django-runserver-does-not-exist-error/","excerpt":"使用pyinstaller將manage.py打包後會產生manage.exe可執行檔，在執行`manage.exe runserver`指令時發生*RuntimeError: Script runserver does not exist.* 錯誤"},{"id":"635a816a57207246b927a8bb","slug":"tcp-three-way-handshake","title":"[Network]TCP 三方交握","updated_at":"2021-07-22T23:29:27.000+08:00","visibility":"public","url":"https://vincent87720.github.io/tcp-three-way-handshake/","excerpt":"三方交握(Three-Way Handshake)是TCP(Transmission Control Protocol)在傳送資料前的一個儀式，用來確認雙方都有收到訊息並建立連線"},{"id":"635a816a57207246b927a8a8","slug":"golang-channel","title":"[Golang]channel簡介","updated_at":"2021-06-14T17:38:33.000+08:00","visibility":"public","url":"https://vincent87720.github.io/golang-channel/","excerpt":"在golang裡可使用channel在多個執行緒與主程式之間傳送資料，channel可設定不同型態的buffer，並指定緩衝區大小"},{"id":"635a816a57207246b927a8b9","slug":"golang-mysql-error-1040","title":"[Golang]MySQL Error 1040: Too Many Connections 錯誤處理","updated_at":"2021-06-09T00:09:52.000+08:00","visibility":"public","url":"https://vincent87720.github.io/golang-mysql-error-1040/","excerpt":"前陣子寫了一個golang程式用來上傳資料到MySQL，起初程式運作都非常良好，過了一陣子開始出現代號為1040的Too Many Connections錯誤，我們一起來看看發生了甚麼事。"},{"id":"635a816a57207246b927a8b8","slug":"zsh-ubuntu-init","title":"[Zsh]更改Ubuntu終端機樣式","updated_at":"2021-06-05T00:33:34.000+08:00","visibility":"public","url":"https://vincent87720.github.io/zsh-ubuntu-init/","excerpt":"近期無意間在網路上發現Bullet Train這個theme，一下子就被燒到了，覺得非常好看，於是決定來將自己的terminal也改成那樣子，提昇~~爽度~~工作效率"},{"id":"635a816a57207246b927a8b7","slug":"flash-firmware-on-esp01","title":"[ESP8266]ESP-01韌體燒錄","updated_at":"2021-02-22T21:51:29.000+08:00","visibility":"public","url":"https://vincent87720.github.io/flash-firmware-on-esp01/","excerpt":"在使用ESP8266有時會遇到兩種情況，原廠出貨的韌體怪怪的導致無法使用AT指令跟ESP8266溝通，或是已經把自己的程式燒進去之後又想重新使用AT指令的功能，這時候就需要重新燒錄韌體，這篇筆記紀錄使用ESP-01作為範例的韌體燒錄及AT指令驗證步驟"},{"id":"635a816a57207246b927a8b6","slug":"ide-vscode-terminal-using-msys","title":"[IDE]在Visual Studio Code中使用MSYS作為終端機","updated_at":"2021-01-21T19:04:37.000+08:00","visibility":"public","url":"https://vincent87720.github.io/ide-vscode-terminal-using-msys/","excerpt":"因為需要用到Makefile的緣故，而windows沒有提供相關的功能，所以希望能夠把Visual studio code預設的powershell改為MSYS作為終端機，便於make指令的操作"},{"id":"635a816a57207246b927a8b5","slug":"mqtt-mosquitto-server-init","title":"[MQTT]Mosquitto Server 安裝與啟動","updated_at":"2020-11-25T02:53:17.000+08:00","visibility":"public","url":"https://vincent87720.github.io/mqtt-mosquitto-server-init/","excerpt":"在使用MQTT進行資料傳遞時，會需要一個代理人，也就是MQTT Broker，作為訂閱/發布的橋樑，Mosquitto Server是一個開源的MQTT的Server，本篇筆記紀錄在Windows下如何安裝並開啟MQTT Server"},{"id":"635a816a57207246b927a8b3","slug":"vue-vuerouter-init","title":"[Vue]將Vue-Router加入到專案中","updated_at":"2020-11-10T23:39:37.000+08:00","visibility":"public","url":"https://vincent87720.github.io/vue-vuerouter-init/","excerpt":"在使用vue時，有時會需要在畫面中切換component，這時vue-router就派上用場啦，vue-router常常被用在single-page application中，這次的期中專題因為要將舊網頁變成single-page app，所以必須先了解如何將vue-router加入到專案中，方便後續使用"},{"id":"635a816a57207246b927a8b2","slug":"vue-vuetify-init","title":"[Vue]Vuetify安裝與使用","updated_at":"2020-11-09T01:25:21.000+08:00","visibility":"public","url":"https://vincent87720.github.io/vue-vuetify-init/","excerpt":"Vuetify是一個Vue的UI框架，有許多精美和現成的組件可讓我們快速進行網頁排版及呈現，由於這篇文章撰寫時vuetify尚未支援Vue3，所以本篇文章以Vue2為例，示範如何將vuetify加入到Vue2專案中"},{"id":"635a816a57207246b927a8a9","slug":"clover-package-err","title":"[Clover]開啟Clover時顯示錯誤訊息：Cannot install without ensuring the file system is read-write","updated_at":"2020-10-28T02:38:56.000+08:00","visibility":"public","url":"https://vincent87720.github.io/clover-package-err/","excerpt":"在開啟Clover時會跳出\"Cannot install without ensuring the file system is read-write\"錯誤訊息"},{"id":"635a816a57207246b927a8a1","slug":"ghost-github-webpage","title":"[Ghost]使用Ghost和GitHub Pages建立網頁","updated_at":"2020-10-28T02:35:57.000+08:00","visibility":"public","url":"https://vincent87720.github.io/ghost-github-webpage/","excerpt":"一直以來都有個困擾，就是查個程式寫法或是軟體操作方法每次都很快就忘記，所以想寫個Blog紀錄自己的手順，先前曾想過直接寫個網頁PUSH到GitHub上，但實在有點累( ˘･з･)，偶然又看到有個很喜歡的排版是用Ghost建立的，因此使用Ghost+GitHub的形式建立部落格"},{"id":"635a816a57207246b927a8ad","slug":"qt-key-mouse-press-event","title":"[Qt]Qt的鍵盤與滑鼠點擊事件","updated_at":"2020-10-28T02:33:15.000+08:00","visibility":"public","url":"https://vincent87720.github.io/qt-key-mouse-press-event/","excerpt":"Qt的鍵盤與滑鼠點擊事件"},{"id":"635a816a57207246b927a8a3","slug":"golang-function","title":"[Golang]Golang函式","updated_at":"2020-10-28T02:30:58.000+08:00","visibility":"public","url":"https://vincent87720.github.io/golang-function/","excerpt":"Golang基礎 - 函式"},{"id":"635a816a57207246b927a8a4","slug":"golang-kill-goroutine","title":"[Golang]從外部中斷Goroutine","updated_at":"2020-10-28T02:29:48.000+08:00","visibility":"public","url":"https://vincent87720.github.io/golang-kill-goroutine/","excerpt":"想要從外部終止一個正在執行中或無限迴圈的goroutine，必須使用channel將中斷訊息傳入使之中斷"},{"id":"635a816a57207246b927a8a5","slug":"python-web-crawler","title":"[Python]使用Python爬蟲抓取網站資料","updated_at":"2020-10-28T02:29:23.000+08:00","visibility":"public","url":"https://vincent87720.github.io/python-web-crawler/","excerpt":"使用python抓取網站或網頁資料是再方便不過的了，常見的抓取方法包含抓取網站回應的JSON檔，或是直接抓取網頁內容並進行分析，以下紀錄兩種方法該如何實作。"},{"id":"635a816a57207246b927a8a7","slug":"golang-package-excelize","title":"[GolangPackage]Excel的讀寫與操作","updated_at":"2020-10-28T02:28:45.000+08:00","visibility":"public","url":"https://vincent87720.github.io/golang-package-excelize/","excerpt":"excelize是一個能夠讀寫excel的package，可讀入或寫入指定位置的資料及更改樣式，適用於批量產生excel檔案及資料處理"},{"id":"635a816a57207246b927a8aa","slug":"cpp-array-pointer-address","title":"[C++]陣列與指標的位址","updated_at":"2020-10-28T02:27:47.000+08:00","visibility":"public","url":"https://vincent87720.github.io/cpp-array-pointer-address/","excerpt":"C++陣列與指標的位址"},{"id":"635a816a57207246b927a8ab","slug":"golang-package-goversioninfo","title":"[GolangPackage]指定golang執行檔檔案屬性","updated_at":"2020-10-28T02:27:11.000+08:00","visibility":"public","url":"https://vincent87720.github.io/golang-package-goversioninfo/","excerpt":"GoVersionInfo package可在生成執行檔時指定執行檔縮圖及檔案屬性，檔案描述、檔案類型、版本等參數皆可指定"},{"id":"635a816a57207246b927a8b1","slug":"vue-vuecli-init","title":"[Vue]使用Vue CLI建立專案","updated_at":"2020-10-28T02:17:14.000+08:00","visibility":"public","url":"https://vincent87720.github.io/vue-vuecli-init/","excerpt":"在之前的課堂裡，我們都是直接開一個html檔案然後把vue寫在裡頭，這次助教介紹了Vue CLI，Vue CLI是一個官方出的工具，可以直接開一個測試用的伺服器，讓開發更方便，並且可以將程式碼打包，方便某些情況下的部屬"},{"id":"635a816a57207246b927a8ae","slug":"golang-package-walk","title":"[GolangPackage] 使用lnx/walk建立圖形化介面","updated_at":"2020-09-01T23:57:02.000+08:00","visibility":"public","url":"https://vincent87720.github.io/golang-package-walk/","excerpt":"golang 普遍使用CLI作為使用者介面，但因為需要做一個程式給不常使用指令的人使用，所以使用lxn/walk建立圖形化使用者介面，lxn/walk可以滿足視窗的大部分需求，適用於建立一些基本的圖形化介面"},{"id":"635a816a57207246b927a8af","slug":"golang-sort-traditionalchinese","title":"[Golang]使用筆畫排序中文字","updated_at":"2020-09-01T23:55:54.000+08:00","visibility":"public","url":"https://vincent87720.github.io/golang-sort-traditionalchinese/","excerpt":"有次嘗試要使用筆劃排序中文姓名時，直接使用sort包進行排序，但發現結果並不是照著筆劃排序，查了點資料發現原來和UTF-8、Big5兩種編碼有極大的關係"},{"id":"635a816a57207246b927a8a2","slug":"wildcard-mask","title":"計算Wildcard Mask","updated_at":"2020-01-26T23:56:59.000+08:00","visibility":"public","url":"https://vincent87720.github.io/wildcard-mask/","excerpt":"在設置ACL(Access Control List)時，會用到Wildcard Mask標示在範圍內的IP位址，這篇筆記記錄如何使用wildcard mask計算IP範圍的起點及終點"},{"id":"635a816a57207246b927a8a6","slug":"clock-and-bandwidth","title":"記憶體的時脈與頻寬","updated_at":"2020-01-15T00:22:18.000+08:00","visibility":"public","url":"https://vincent87720.github.io/clock-and-bandwidth/","excerpt":"記憶體的時脈與頻寬"}],"meta":{"pagination":{"page":1,"limit":10000,"pages":1,"total":56,"next":null,"prev":null}}}